############### BASIC COMMANDS ################
pwd - command is used to display the location of the current working directory.

###################
mkdir - command is used to create a new directory under any directory.
  (mkdir <directory name>)
  
  example - mkdir linux

###################
rmdir - command is used to delete a directory.
  (rmdir <directory name>)
  
  example - rmdir linux

##################
ls - command is used to display a list of content of a directory.
  [ls -litra] - command to display a list of content of a directory with count and hidden files

#################
cd - command is used to change the current directory. 
  (cd <directory name>)
  
  example - cd linux
  example to move out of that directory - cd ../

################
touch - command is used to create empty files. We can create multiple empty files by executing it once.
  touch <file name>  
  touch <file1>  <file2>
  
  example - touch demo.txt demo1.txt
  
  
#####################
chmod - command is used to change file permission
  
  chmod XXX <filename>
  4 or r- read
  2 or w- write
  1 or x- execute
  u - user level permission
  g - group level permission
  o - other user level permission
  
  
  example - chmod 600 learningnotes.txt
            chmod u=rwx,g=rx,o=rx learningnotes.txt
###############
chown - command is an abbreviation for “changing owner”
  
    example - chown user demo.txt
              chown group:user demo.txt


cat - command is a multi-purpose utility in the Linux system. It can be used to create a file, display content of the file, copy the content of one file to another file, and more.
  cat [OPTION]... [FILE]..  (cat <file name>)
  
  To create a file, execute it as follows: cat > <file name>
    Press "CTRL+ D" keys to save the file
  
 ##############
 rm - command is used to remove a file.
  rm <file name>
  example - rm demo.txt

################
cp - command is used to copy a file or directory.
  cp <existing file name> <new file name>
  example - cp demo.txt demo_copy.txt
  


################
mv - command is used to move a file or a directory form one location to another location.
  mv <file name> <directory path> 
  example - mv demo.txt /home/sathish/linux
  

################
rename - command is used to rename files. It is useful for renaming a large group of files.
  rename 's/old-name/new-name/' files 
  example - rename 's/\.txt$/\.pdf/' *.txt  

################
 head - command is used to display the content of a file. It displays the first 10 lines of a file.
  head <file name> 
  example - head demo.txt

################
tail - command is similar to the head command. The difference between both commands is that it displays the last ten lines of the file content. It is useful for reading the error message.
  tail <file name>
  example - tail demo.txt
  
################
tac - command is the reverse of cat command, as its name specified. It displays the file content in reverse order (from the last line).
  tac <file name>
  example - tac demo.txt

################
more - command is quite similar to the cat command, as it is used to display the file content in the same way that the cat command does. The only difference between both commands is that, in case of larger files, the more command displays screenful output at a time.
In more command, the following keys are used to scroll the page:
ENTER key: To scroll down page by line.
Space bar: To move to the next page.
b key: To move to the previous page.
/ key: To search the string.
  
  more <file name>
  example - more demo.txt
 
################
less - command is similar to the more command. It also includes some extra features such as 'adjustment in width and height of the terminal.' Comparatively, the more command cuts the output in the width of the terminal.
  less <file name> 
  example - less demo.txt
  
###############
su - command provides administrative access to another user. In other words, it allows access of the Linux shell to another user.
  su <user name>  
  example - su sathish
  
###############
id - command is used to display the user ID (UID) and group ID (GID).
  id  
  
##############
useradd - command is used to add or remove a user on a Linux server.
  useradd  username
  
  example - useradd sathish

#############
passwd - command is used to create and change the password for a user.
  passwd <username> 
  
  example - sudo passwd sathish

#############
groupadd - command is used to create a user group.
  groupadd <group name>  
  
  example - groupadd root

#############
cat - command is also used as a filter. To filter a file, it is used inside pipes.
  cat <fileName> | cat or tac | cat or tac |. . .   
  
  example - cat file1.txt file2.txt > filemerge.txt

################
cut - command is used to select a specific column of a file. The '-d' option is used as a delimiter, and it can be a space (' '), a slash (/), a hyphen (-), or anything else. And, the '-f' option is used to specify a column number.
  cut -d(delimiter) -f(columnNumber) <fileName>  
 
###############
grep - command is the most powerful and used filter in a Linux system. The 'grep' stands for "global regular expression print." It is useful for searching the content from a file. Generally, it is used with the pipe.
  command | grep <searchWord> 
  
  example - cat demo.txt | grep hello
################
'comm' - command is used to compare two files or streams. By default, it displays three columns, first displays non-matching items of the first file, second indicates the non-matching item of the second file, and the third column displays the matching items of both files.
  comm <file1> <file2>  
  
  example - comm demo.txt demo1.txt
  
#################
sed - command is also known as stream editor. It is used to edit files using a regular expression. It does not permanently edit files; instead, the edited content remains only on display. It does not affect the actual file.
  
  command | sed 's/<oldWord>/<newWord>/'  
  
  example - cat demo.txt | sed 's/hello/hi/'
  
#################
tee - command is quite similar to the cat command. The only difference between both filters is that it puts standard input on standard output and also write them into a file.

  cat <fileName> | tee <newFile> |  cat or tac |..... 
  
  example - cat demo.txt | tee new.txt | cat
 
################
tr - command is used to translate the file content like from lower case to upper case.
  
  command | tr <'old'> <'new'> 
  
  example - cat marks.txt | tr 'happy' 'HAPPY'
  

################
uniq - command is used to form a sorted list in which every word will occur only once.

  command <fileName> | uniq  
  
  example - sort demo.txt | uniq
  

################
wc - command is used to count the lines, words, and characters in a file.
  
  wc <file name>  
  
  example - wc demo.txt
  

###############
od - command is used to display the content of a file in different s, such as hexadecimal, octal, and ASCII characters.
  
  od -b <fileName>      // Octal format  
  od -t x1 <fileName>   // Hexa decimal format  
  od -c <fileName>     // ASCII character format 
  
  example - od -b demo.txt
            od -t demo.txt
            od -c demo.txt
           

###############
sort - command is used to sort files in alphabetical order.

  sort <file name> 
  
  example - sort demo.txt
  
###############
gzip - command is used to truncate the file size. It is a compressing tool. It replaces the original file by the compressed file having '.gz' extension.
  
  gzip <file1> <file2> <file3>... 
  
  example - gzip demo.txt demo1.txt
  
###############
gunzip - command is used to decompress a file. It is a reverse operation of gzip command.

  gunzip <file1> <file2> <file3>. .
  
  example - gunzip demo.txt demo1.txt
  
###############
find - command is used to find a particular file within a directory. It also supports various options to find a file such as byname, by type, by date, and more.
The following symbols are used after the find command:
  (.) : For current directory name
  (/) : For root
  
    find . -name "*.pdf" 
    
    example - find . -name "*.pdf" 
    
    
###############
locate - command is used to search a file by file name. It is quite similar to find command; the difference is that it is a background process. It searches the file in the database, whereas the find command searches in the file system. It is faster than the find command. To find the file with the locates command, keep your database updated.
  
  locate <file name>  
  
  example - locate demo.txt
  
###############
date - command is used to display date, time, time zone, and more.
  
  date
  
  example - date
  
################
zcat - command is used to display the compressed files.

  zcat <file name>  
  
  example - zcat demo.txt
  
################
df - command is used to display the disk space used in the file system. It displays the output as in the number of used blocks, available blocks, and the mounted directory.

  df
  
################
mount - command is used to connect an external device file system to the system's file system.

  mount -t type <device> <directory>  
  
  example - mount
  
################
exit - command is used to exit from the current shell. It takes a parameter as a number and exits the shell with a return of status number.

################
 clear - command is used to clear the terminal screen.
 
################
ip - command is an updated version of the ipconfig command. It is used to assign an IP address, initialize an interface, disable an interface.
  ip a or ip addr 
   
   example - ip a
 
################
ssh - command is used to create a remote connection through the ssh protocol.
  ssh user_name@host(IP/Domain_name)</p>  
  
###############
host - command is used to display the IP address for a given domain name and vice versa. It performs the DNS lookups for the DNS Query.

  host <domain name> or <ip address>  
  
  example - host google.com
  
#################################################  END ########################################################
